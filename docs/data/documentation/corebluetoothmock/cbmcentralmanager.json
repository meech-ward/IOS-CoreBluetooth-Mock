{"sections":[],"metadata":{"roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBMCentralManager"}],"modules":[{"name":"CoreBluetoothMock"}],"navigatorTitle":[{"kind":"identifier","text":"CBMCentralManager"}],"title":"CBMCentralManager","externalID":"c:@M@CoreBluetoothMock@objc(cs)CBMCentralManager","role":"symbol","symbolKind":"class"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/corebluetoothmock\/cbmcentralmanager"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"CBMCentralManager","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"CBMCentralManager"},{"type":"text","text":" objects manage discovered or connected remote peripheral devices"},{"type":"text","text":" "},{"type":"text","text":"(represented by "},{"isActive":true,"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheral","type":"reference"},{"type":"text","text":" objects), including scanning for, discovering, and connecting"},{"type":"text","text":" "},{"type":"text","text":"to advertising peripherals."}]},{"inlineContent":[{"type":"text","text":"Before calling the "},{"code":"CBMCentralManager","type":"codeVoice"},{"type":"text","text":" methods, set the state of the central manager object to"},{"type":"text","text":" "},{"type":"text","text":"powered on, as indicated by the "},{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMManagerState\/poweredOn","type":"reference","isActive":true},{"text":" constant. This state","type":"text"},{"type":"text","text":" "},{"type":"text","text":"indicates that the central device (your iPhone or iPad, for instance) supports Bluetooth low energy"},{"type":"text","text":" "},{"type":"text","text":"and that Bluetooth is on and available for use."}],"type":"paragraph"},{"level":2,"anchor":"Initialization","type":"heading","text":"Initialization"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The CoreBluetoothMock library provides two implementations of "},{"code":"CBMCentralManager","type":"codeVoice"},{"text":":","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerNative","type":"reference","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerMock","isActive":true}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Because of this, instance of the manager has to be created using a"},{"type":"text","text":" "},{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerFactory","isActive":true,"type":"reference"},{"type":"text","text":"."}]},{"code":["let manager = CBMCentralManagerFactory.initiate(delegate: self, queue: ...)"],"syntax":"swift","type":"codeListing"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager"},"relationshipsSections":[{"identifiers":["doc:\/\/CoreBluetoothMock\/objc(cs)NSObject"],"kind":"relationships","type":"inheritsFrom","title":"Inherits From"},{"identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerMock","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerNative"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"type":"conformsTo","identifiers":["doc:\/\/CoreBluetoothMock\/objc(pl)NSObject","doc:\/\/CoreBluetoothMock\/s7CVarArgP","doc:\/\/CoreBluetoothMock\/s28CustomDebugStringConvertibleP","doc:\/\/CoreBluetoothMock\/s23CustomStringConvertibleP","doc:\/\/CoreBluetoothMock\/SQ","doc:\/\/CoreBluetoothMock\/SH"],"kind":"relationships","title":"Conforms To"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"An object that scans for, discovers, connects to, and manages peripherals."}],"topicSections":[{"abstract":[{"text":"Do not create instances of the manager using this method.","type":"text"},{"text":" ","type":"text"},{"text":"Instead, use ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerFactory"},{"text":".","type":"text"}],"title":"Initialization","identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/init(_:)"]},{"identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/connect(_:options:)","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/cancelPeripheralConnection(_:)"],"title":"Establishing or Canceling Connections with Peripherals"},{"title":"Retrieving Lists of Peripherals","identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/retrieveConnectedPeripherals(withServices:)","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/retrievePeripherals(withIdentifiers:)"]},{"identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/scanForPeripherals(withServices:options:)","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/stopScan()","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/isScanning"],"title":"Scanning or Stopping Scans of Peripherals"},{"title":"Monitoring Properties","identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/delegate","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/state","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/authorization-swift.type.property"]},{"title":"Receiving Connection Events","identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMConnectionEvent","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMConnectionEventMatchingOption"]},{"title":"Deprecated","identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/authorization-swift.property"]}],"hierarchy":{"paths":[["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock"]]},"seeAlsoSections":[{"title":"Central Manager","identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerFactory","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegateProxy","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerMock","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerNative","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMManagerState","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMManagerAuthorization"],"generated":true}],"references":{"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager/cancelPeripheralConnection(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cancelPeripheralConnection","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:17CoreBluetoothMock13CBMPeripheralP","text":"CBMPeripheral","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Cancels an active or pending local connection to a peripheral.","type":"text"}],"title":"cancelPeripheralConnection(_:)","type":"topic","kind":"symbol","url":"\/documentation\/corebluetoothmock\/cbmcentralmanager\/cancelperipheralconnection(_:)","role":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/cancelPeripheralConnection(_:)"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager":{"type":"topic","kind":"symbol","title":"CBMCentralManager","url":"\/documentation\/corebluetoothmock\/cbmcentralmanager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"CBMCentralManager","kind":"identifier"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager","abstract":[{"text":"An object that scans for, discovers, connects to, and manages peripherals.","type":"text"}],"navigatorTitle":[{"text":"CBMCentralManager","kind":"identifier"}],"role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager/authorization-swift.type.property":{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/authorization-swift.type.property","abstract":[{"text":"The current authorization status for using Bluetooth.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"authorization"},{"text":": ","kind":"text"},{"text":"CBMManagerAuthorization","kind":"typeIdentifier","preciseIdentifier":"s:17CoreBluetoothMock23CBMManagerAuthorizationa"}],"title":"authorization","url":"\/documentation\/corebluetoothmock\/cbmcentralmanager\/authorization-swift.type.property","kind":"symbol","type":"topic","role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager/init(_:)":{"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/init(_:)","abstract":[{"type":"text","text":"A dummy initializer that allows overriding "},{"type":"reference","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager","isActive":true},{"text":" class and also","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"gives a warning when trying to migrate from native "},{"type":"codeVoice","code":"CBCentralManager"},{"text":" ","type":"text"},{"text":"to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager"},{"text":". This method does nothing.","type":"text"}],"title":"init(_:)","role":"symbol","url":"\/documentation\/corebluetoothmock\/cbmcentralmanager\/init(_:)"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager/isScanning":{"kind":"symbol","title":"isScanning","type":"topic","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/isScanning","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isScanning","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Whether or not the central is currently scanning."}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanager\/isscanning","role":"symbol"},"doc://CoreBluetoothMock/SH":{"identifier":"doc:\/\/CoreBluetoothMock\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://CoreBluetoothMock/SQ":{"identifier":"doc:\/\/CoreBluetoothMock\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager/retrievePeripherals(withIdentifiers:)":{"type":"topic","url":"\/documentation\/corebluetoothmock\/cbmcentralmanager\/retrieveperipherals(withidentifiers:)","title":"retrievePeripherals(withIdentifiers:)","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/retrievePeripherals(withIdentifiers:)","abstract":[{"type":"text","text":"Returns a list of known peripherals by their identifiers."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"retrievePeripherals"},{"kind":"text","text":"("},{"text":"withIdentifiers","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"UUID","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4UUIDV"},{"text":"]) -> [","kind":"text"},{"preciseIdentifier":"s:17CoreBluetoothMock13CBMPeripheralP","text":"CBMPeripheral","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"kind":"symbol"},"doc://CoreBluetoothMock/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/CoreBluetoothMock\/s28CustomDebugStringConvertibleP","type":"unresolvable","title":"Swift.CustomDebugStringConvertible"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMConnectionEvent":{"type":"topic","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMConnectionEvent","url":"\/documentation\/corebluetoothmock\/cbmconnectionevent","title":"CBMConnectionEvent","abstract":[{"text":"A change to the connection state of a peer.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"CBMConnectionEvent","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMConnectionEvent"}],"kind":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager/scanForPeripherals(withServices:options:)":{"kind":"symbol","title":"scanForPeripherals(withServices:options:)","type":"topic","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/scanForPeripherals(withServices:options:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"scanForPeripherals","kind":"identifier"},{"kind":"text","text":"("},{"text":"withServices","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"CBMUUID","kind":"typeIdentifier","preciseIdentifier":"s:17CoreBluetoothMock7CBMUUIDa"},{"kind":"text","text":"]?, "},{"text":"options","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":" : "},{"text":"Any","kind":"keyword"},{"kind":"text","text":"]?)"}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanager\/scanforperipherals(withservices:options:)","abstract":[{"type":"text","text":"Scans for peripherals that are advertising services."}],"role":"symbol"},"doc://CoreBluetoothMock/s23CustomStringConvertibleP":{"identifier":"doc:\/\/CoreBluetoothMock\/s23CustomStringConvertibleP","type":"unresolvable","title":"Swift.CustomStringConvertible"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMManagerState/unknown":{"kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMManagerState\/unknown","url":"\/documentation\/corebluetoothmock\/cbmmanagerstate\/unknown","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"unknown","kind":"identifier"}],"abstract":[{"type":"text","text":"The manager’s state is unknown."}],"role":"symbol","title":"CBMManagerState.unknown"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerNative":{"navigatorTitle":[{"kind":"identifier","text":"CBMCentralManagerNative"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMCentralManagerNative"}],"type":"topic","kind":"symbol","abstract":[{"text":"An implementation  of ","type":"text"},{"type":"reference","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager","isActive":true},{"type":"text","text":" that will proxy all the requests and responses"},{"type":"text","text":" "},{"type":"text","text":"to the native "},{"code":"CBCentralManager","type":"codeVoice"},{"type":"text","text":" object."}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanagernative","title":"CBMCentralManagerNative","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerNative","role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager/retrieveConnectedPeripherals(withServices:)":{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/retrieveConnectedPeripherals(withServices:)","type":"topic","url":"\/documentation\/corebluetoothmock\/cbmcentralmanager\/retrieveconnectedperipherals(withservices:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"retrieveConnectedPeripherals","kind":"identifier"},{"kind":"text","text":"("},{"text":"withServices","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"CBMUUID","preciseIdentifier":"s:17CoreBluetoothMock7CBMUUIDa","kind":"typeIdentifier"},{"kind":"text","text":"]) -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:17CoreBluetoothMock13CBMPeripheralP","text":"CBMPeripheral"},{"kind":"text","text":"]"}],"kind":"symbol","role":"symbol","title":"retrieveConnectedPeripherals(withServices:)","abstract":[{"text":"Returns a list of the peripherals connected to the system whose","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"services match a given set of criteria."}]},"doc://CoreBluetoothMock/objc(pl)NSObject":{"identifier":"doc:\/\/CoreBluetoothMock\/objc(pl)NSObject","type":"unresolvable","title":"ObjectiveC.NSObjectProtocol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegateProxy":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"CBMCentralManagerDelegateProxy","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegateProxy","title":"CBMCentralManagerDelegateProxy","abstract":[{"text":"A helper class that allows setting delegate callbacks as closures.","type":"text"}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegateproxy","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CBMCentralManagerDelegateProxy"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerFactory":{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerFactory","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMCentralManagerFactory"}],"type":"topic","title":"CBMCentralManagerFactory","abstract":[{"type":"text","text":"The factory that instantiates the "},{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager","isActive":true,"type":"reference"},{"text":" object.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CBMCentralManagerFactory"}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerfactory"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerMock":{"abstract":[{"type":"text","text":"Mock implementation of the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"CBMCentralManagerMock"}],"role":"symbol","title":"CBMCentralManagerMock","kind":"symbol","type":"topic","url":"\/documentation\/corebluetoothmock\/cbmcentralmanagermock","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerMock","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CBMCentralManagerMock","kind":"identifier"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager/state":{"kind":"symbol","title":"state","type":"topic","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/state","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17CoreBluetoothMock15CBMManagerStateO","text":"CBMManagerState"}],"abstract":[{"type":"text","text":"The current state of the manager, initially set to "},{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMManagerState\/unknown","type":"reference","isActive":true},{"text":".","type":"text"}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanager\/state","role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMManagerState":{"abstract":[{"type":"text","text":"The possible states of a Core Bluetooth manager."}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMManagerState","title":"CBMManagerState","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMManagerState"}],"navigatorTitle":[{"text":"CBMManagerState","kind":"identifier"}],"url":"\/documentation\/corebluetoothmock\/cbmmanagerstate"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager/delegate":{"kind":"symbol","title":"delegate","type":"topic","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/delegate","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"delegate"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:17CoreBluetoothMock25CBMCentralManagerDelegateP","text":"CBMCentralManagerDelegate","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanager\/delegate","abstract":[{"text":"The delegate object that will receive central events.","type":"text"}],"role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager/stopScan()":{"kind":"symbol","title":"stopScan()","type":"topic","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/stopScan()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"stopScan","kind":"identifier"},{"kind":"text","text":"()"}],"abstract":[{"text":"Asks the central manager to stop scanning for peripherals.","type":"text"}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanager\/stopscan()","role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMManagerState/poweredOn":{"role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"poweredOn","kind":"identifier"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMManagerState\/poweredOn","type":"topic","title":"CBMManagerState.poweredOn","abstract":[{"type":"text","text":"A state that indicates Bluetooth is currently powered on and available to use."}],"url":"\/documentation\/corebluetoothmock\/cbmmanagerstate\/poweredon","kind":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMConnectionEventMatchingOption":{"type":"topic","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMConnectionEventMatchingOption","title":"CBMConnectionEventMatchingOption","url":"\/documentation\/corebluetoothmock\/cbmconnectioneventmatchingoption","abstract":[{"type":"text","text":"A set of options to use when registering for connection events."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CBMConnectionEventMatchingOption"}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"CBMConnectionEventMatchingOption","kind":"identifier"}],"kind":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMManagerAuthorization":{"title":"CBMManagerAuthorization","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMManagerAuthorization","url":"\/documentation\/corebluetoothmock\/cbmmanagerauthorization","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMManagerAuthorization"}],"abstract":[{"text":"The current authorization state of a Core Bluetooth manager.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"CBMManagerAuthorization","kind":"identifier"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager/connect(_:options:)":{"kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/connect(_:options:)","abstract":[{"text":"Establishes a local connection to a peripheral.","type":"text"}],"role":"symbol","title":"connect(_:options:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"CBMPeripheral","kind":"typeIdentifier","preciseIdentifier":"s:17CoreBluetoothMock13CBMPeripheralP"},{"kind":"text","text":", "},{"text":"options","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"text":"]?)","kind":"text"}],"type":"topic","url":"\/documentation\/corebluetoothmock\/cbmcentralmanager\/connect(_:options:)"},"doc://CoreBluetoothMock/objc(cs)NSObject":{"title":"ObjectiveC.NSObject","type":"unresolvable","identifier":"doc:\/\/CoreBluetoothMock\/objc(cs)NSObject"},"doc://CoreBluetoothMock/s7CVarArgP":{"title":"Swift.CVarArg","type":"unresolvable","identifier":"doc:\/\/CoreBluetoothMock\/s7CVarArgP"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegate":{"url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate","kind":"symbol","title":"CBMCentralManagerDelegate","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CBMCentralManagerDelegate"}],"type":"topic","abstract":[{"type":"text","text":"A protocol that provides updates for the discovery and management of peripheral devices."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBMCentralManagerDelegate"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock":{"abstract":[{"type":"text","text":"Test "},{"inlineContent":[{"text":"CoreBluetooth","type":"text"}],"type":"strong"},{"type":"text","text":" features in your app using mocks."}],"title":"CoreBluetoothMock","type":"topic","kind":"symbol","role":"collection","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock","url":"\/documentation\/corebluetoothmock"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager/authorization-swift.property":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"authorization"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CBMManagerAuthorization","preciseIdentifier":"s:17CoreBluetoothMock23CBMManagerAuthorizationa"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager\/authorization-swift.property","type":"topic","title":"authorization","abstract":[{"type":"text","text":"The current authorization status for using Bluetooth."}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanager\/authorization-swift.property","kind":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMPeripheral":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMPeripheral"}],"kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheral","abstract":[{"text":"A remote peripheral device.","type":"text"}],"role":"symbol","title":"CBMPeripheral","navigatorTitle":[{"text":"CBMPeripheral","kind":"identifier"}],"url":"\/documentation\/corebluetoothmock\/cbmperipheral","type":"topic"}}}