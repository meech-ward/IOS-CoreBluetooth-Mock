{"sections":[],"topicSections":[{"title":"How to migrate a project to CoreBluetooth Mock framework","identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/Migration-guide"]},{"title":"How to create mock peripherals","identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/Mocking-peripherals"]},{"title":"How to simulate test events","identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/Simulation"]},{"identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/Known-issues"],"title":"Known issues"},{"title":"Mocking Bluetooth LE Devices","abstract":[{"type":"text","text":"The following objects can be used to create mock implementation of Bluetooth LE"},{"type":"text","text":" "},{"type":"text","text":"devices. Such mock peripherals will be available using "},{"type":"reference","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerMock","isActive":true},{"type":"text","text":"."}],"identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralSpec","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralSpecDelegate","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMProximity","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementConfig"]},{"title":"Central Manager","identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerFactory","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegateProxy","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerMock","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerNative","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMManagerState","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMManagerAuthorization"]},{"identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerOptionRestoreIdentifierKey","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerOptionShowPowerAlertKey"],"abstract":[{"type":"text","text":"Keys used to pass options when initializing a central manager."}],"title":"Central Manager Initialization Options"},{"abstract":[{"text":"Keys used to pass state restoration options to the central manager initializer.","type":"text"}],"title":"Central Manager State Restoration Options","identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerRestoredStatePeripheralsKey","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerRestoredStateScanServicesKey","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerRestoredStateScanOptionsKey"]},{"title":"Peripheral","identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeer","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheral","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralDelegate","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralDelegateProxy","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralDelegateProxyWithL2CAPChannel","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralMock","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralNative","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralPreview","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralState","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBML2CAPPSM","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBML2CAPChannel"]},{"identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMConnectPeripheralOptionNotifyOnConnectionKey","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMConnectPeripheralOptionNotifyOnDisconnectionKey","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMConnectPeripheralOptionNotifyOnNotificationKey","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMConnectPeripheralOptionStartDelayKey"],"title":"Peripheral Connection Options","abstract":[{"type":"text","text":"Keys used to pass options when connecting to a peripheral."}]},{"identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAttribute","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMService","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMServiceMock","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCharacteristic","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCharacteristicWriteType","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCharacteristicProperties","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCharacteristicMock","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMDescriptor","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMDescriptorMock","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMClientCharacteristicConfigurationDescriptorMock","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCCCDescriptorMock"],"title":"Attributes"},{"abstract":[{"text":"Keys used to pass options when scanning for peripherals.","type":"text"}],"identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerScanOptionAllowDuplicatesKey","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerScanOptionSolicitedServiceUUIDsKey"],"title":"Scanning options"},{"abstract":[{"text":"Keys used to specify items in a dictionary of peripheral advertisement data.","type":"text"}],"title":"Advertisement Data Retrieval Keys","identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementDataLocalNameKey","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementDataManufacturerDataKey","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementDataServiceDataKey","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementDataServiceUUIDsKey","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementDataOverflowServiceUUIDsKey","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementDataTxPowerLevelKey","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementDataIsConnectable","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementDataSolicitedServiceUUIDsKey"]},{"title":"Other","identifiers":["doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMUUID","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMError","doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMATTError"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/corebluetoothmock"]}],"metadata":{"modules":[{"name":"CoreBluetoothMock"}],"roleHeading":"Framework","title":"CoreBluetoothMock","symbolKind":"module","role":"collection","externalID":"CoreBluetoothMock"},"hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"strong","inlineContent":[{"text":"CoreBluetoothMock","type":"text"}]},{"text":" library provides an intuitive API for mocking physical","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Bluetooth LE devices using an implementation in Swift. This allows:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Testing Bluetooth LE connectivity on a simulator,"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Simulating a Bluetooth LE device during the development phase,"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Reliable method for automating tests and taking screenshots."}]}]}],"type":"unorderedList"},{"type":"aside","style":"note","content":[{"inlineContent":[{"text":"Current version supports testing only central manager features.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The peripheral manager functionality is planned."}],"type":"paragraph"}],"name":"Note"}]}],"abstract":[{"type":"text","text":"Test "},{"type":"strong","inlineContent":[{"type":"text","text":"CoreBluetooth"}]},{"type":"text","text":" features in your app using mocks."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegate":{"url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegate","kind":"symbol","title":"CBMCentralManagerDelegate","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegate","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CBMCentralManagerDelegate"}],"type":"topic","abstract":[{"type":"text","text":"A protocol that provides updates for the discovery and management of peripheral devices."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBMCentralManagerDelegate"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMServiceMock":{"role":"symbol","url":"\/documentation\/corebluetoothmock\/cbmservicemock","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMServiceMock","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMServiceMock"}],"navigatorTitle":[{"kind":"identifier","text":"CBMServiceMock"}],"type":"topic","kind":"symbol","title":"CBMServiceMock","abstract":[{"type":"text","text":"Mock implementation of "},{"type":"reference","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMService","isActive":true},{"text":".","type":"text"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMAdvertisementDataIsConnectable":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMAdvertisementDataIsConnectable"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementDataIsConnectable","type":"topic","url":"\/documentation\/corebluetoothmock\/cbmadvertisementdataisconnectable","title":"CBMAdvertisementDataIsConnectable","abstract":[{"text":"A Boolean value that indicates whether the advertising event type is connectable.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMAdvertisementDataManufacturerDataKey":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMAdvertisementDataManufacturerDataKey"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementDataManufacturerDataKey","type":"topic","url":"\/documentation\/corebluetoothmock\/cbmadvertisementdatamanufacturerdatakey","title":"CBMAdvertisementDataManufacturerDataKey","kind":"symbol","abstract":[{"text":"The manufacturer data of a peripheral.","type":"text"}],"role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManager":{"type":"topic","kind":"symbol","title":"CBMCentralManager","url":"\/documentation\/corebluetoothmock\/cbmcentralmanager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"CBMCentralManager","kind":"identifier"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager","abstract":[{"text":"An object that scans for, discovers, connects to, and manages peripherals.","type":"text"}],"navigatorTitle":[{"text":"CBMCentralManager","kind":"identifier"}],"role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMPeripheralDelegate":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CBMPeripheralDelegate"}],"url":"\/documentation\/corebluetoothmock\/cbmperipheraldelegate","abstract":[{"text":"A protocol that provides updates on the use of a peripheral’s services.","type":"text"}],"title":"CBMPeripheralDelegate","role":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"CBMPeripheralDelegate","kind":"identifier"}],"type":"topic"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBML2CAPChannel":{"type":"topic","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBML2CAPChannel","title":"CBML2CAPChannel","role":"symbol","navigatorTitle":[{"text":"CBML2CAPChannel","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBML2CAPChannel"}],"abstract":[{"text":"A live L2CAP connection to a remote device.","type":"text"}],"url":"\/documentation\/corebluetoothmock\/cbml2capchannel","kind":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMDescriptor":{"url":"\/documentation\/corebluetoothmock\/cbmdescriptor","abstract":[{"text":"An object that provides further information about a remote peripheral’s characteristic.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMDescriptor","navigatorTitle":[{"kind":"identifier","text":"CBMDescriptor"}],"title":"CBMDescriptor","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"CBMDescriptor","kind":"identifier"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMError":{"type":"topic","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CBMError","kind":"identifier"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMError","kind":"symbol","abstract":[{"type":"text","text":"An error that Core Bluetooth returns during Bluetooth transactions."}],"url":"\/documentation\/corebluetoothmock\/cbmerror","navigatorTitle":[{"text":"CBMError","kind":"identifier"}],"title":"CBMError"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMPeripheralDelegateProxyWithL2CAPChannel":{"type":"topic","role":"symbol","title":"CBMPeripheralDelegateProxyWithL2CAPChannel","abstract":[{"text":"A helper class that allows setting delegate callbacks as closures.","type":"text"}],"url":"\/documentation\/corebluetoothmock\/cbmperipheraldelegateproxywithl2capchannel","kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralDelegateProxyWithL2CAPChannel","navigatorTitle":[{"text":"CBMPeripheralDelegateProxyWithL2CAPChannel","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBMPeripheralDelegateProxyWithL2CAPChannel"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/Known-issues":{"role":"article","type":"topic","title":"Known issues","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/Known-issues","url":"\/documentation\/corebluetoothmock\/known-issues","abstract":[{"text":"Known issues when using ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"CoreBluetoothMock"}]},{"text":" framework instead of native ","type":"text"},{"type":"strong","inlineContent":[{"text":"CoreBluetooth","type":"text"}]},{"type":"text","text":"."}],"kind":"article"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/Migration-guide":{"url":"\/documentation\/corebluetoothmock\/migration-guide","role":"article","title":"Migration guide","type":"topic","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/Migration-guide","kind":"article","abstract":[{"text":"Migration guide from ","type":"text"},{"inlineContent":[{"type":"text","text":"CoreBluetooth"}],"type":"strong"},{"text":" to ","type":"text"},{"inlineContent":[{"type":"text","text":"CoreBluetoothFramework"}],"type":"strong"},{"text":".","type":"text"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerFactory":{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerFactory","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMCentralManagerFactory"}],"type":"topic","title":"CBMCentralManagerFactory","abstract":[{"type":"text","text":"The factory that instantiates the "},{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager","isActive":true,"type":"reference"},{"text":" object.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CBMCentralManagerFactory"}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerfactory"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMUUID":{"navigatorTitle":[{"text":"CBMUUID","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBMUUID"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A universally unique identifier, as defined by Bluetooth standards."}],"url":"\/documentation\/corebluetoothmock\/cbmuuid","title":"CBMUUID","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMUUID","role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMAdvertisementDataSolicitedServiceUUIDsKey":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMAdvertisementDataSolicitedServiceUUIDsKey"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementDataSolicitedServiceUUIDsKey","type":"topic","url":"\/documentation\/corebluetoothmock\/cbmadvertisementdatasolicitedserviceuuidskey","title":"CBMAdvertisementDataSolicitedServiceUUIDsKey","abstract":[{"text":"An array of solicited service UUIDs.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMPeripheralPreview":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"CBMPeripheralPreview","kind":"identifier"}],"abstract":[{"text":"A stub ","type":"text"},{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheral","isActive":true,"type":"reference"},{"text":" implementation designed only for SwiftUI Previews.","type":"text"}],"title":"CBMPeripheralPreview","type":"topic","kind":"symbol","url":"\/documentation\/corebluetoothmock\/cbmperipheralpreview","role":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralPreview","navigatorTitle":[{"text":"CBMPeripheralPreview","kind":"identifier"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCCCDescriptorMock":{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCCCDescriptorMock","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"CBMCCCDescriptorMock","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"CBMCCCDescriptorMock","kind":"identifier"}],"url":"\/documentation\/corebluetoothmock\/cbmcccdescriptormock","kind":"symbol","type":"topic","abstract":[{"text":"A type alias of ","type":"text"},{"type":"reference","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMClientCharacteristicConfigurationDescriptorMock","isActive":true},{"type":"text","text":"."}],"title":"CBMCCCDescriptorMock"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerRestoredStatePeripheralsKey":{"kind":"symbol","type":"topic","title":"CBMCentralManagerRestoredStatePeripheralsKey","url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerrestoredstateperipheralskey","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"CBMCentralManagerRestoredStatePeripheralsKey","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerRestoredStatePeripheralsKey","abstract":[{"text":"An array of peripherals for use when restoring the state of a central manager.","type":"text"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerOptionShowPowerAlertKey":{"url":"\/documentation\/corebluetoothmock\/cbmcentralmanageroptionshowpoweralertkey","abstract":[{"text":"A Boolean value that specifies whether the system warns the user if the app instantiates","type":"text"},{"text":" ","type":"text"},{"text":"the central manager when Bluetooth service isn’t available.","type":"text"}],"role":"symbol","type":"topic","title":"CBMCentralManagerOptionShowPowerAlertKey","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMCentralManagerOptionShowPowerAlertKey"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerOptionShowPowerAlertKey","kind":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCharacteristicMock":{"kind":"symbol","url":"\/documentation\/corebluetoothmock\/cbmcharacteristicmock","abstract":[{"type":"text","text":"Mock implementation of "},{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCharacteristic","type":"reference","isActive":true},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCharacteristicMock","navigatorTitle":[{"text":"CBMCharacteristicMock","kind":"identifier"}],"title":"CBMCharacteristicMock","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"CBMCharacteristicMock","kind":"identifier"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerDelegateProxy":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"CBMCentralManagerDelegateProxy","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerDelegateProxy","title":"CBMCentralManagerDelegateProxy","abstract":[{"text":"A helper class that allows setting delegate callbacks as closures.","type":"text"}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerdelegateproxy","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CBMCentralManagerDelegateProxy"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerNative":{"navigatorTitle":[{"kind":"identifier","text":"CBMCentralManagerNative"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMCentralManagerNative"}],"type":"topic","kind":"symbol","abstract":[{"text":"An implementation  of ","type":"text"},{"type":"reference","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager","isActive":true},{"type":"text","text":" that will proxy all the requests and responses"},{"type":"text","text":" "},{"type":"text","text":"to the native "},{"code":"CBCentralManager","type":"codeVoice"},{"type":"text","text":" object."}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanagernative","title":"CBMCentralManagerNative","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerNative","role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerScanOptionSolicitedServiceUUIDsKey":{"type":"topic","url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerscanoptionsolicitedserviceuuidskey","title":"CBMCentralManagerScanOptionSolicitedServiceUUIDsKey","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerScanOptionSolicitedServiceUUIDsKey","abstract":[{"text":"An array of service UUIDs that you want to scan for.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"CBMCentralManagerScanOptionSolicitedServiceUUIDsKey","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"kind":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMPeripheralSpec":{"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBMPeripheralSpec"}],"kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralSpec","abstract":[{"type":"text","text":"Specification of a mock peripheral."}],"title":"CBMPeripheralSpec","navigatorTitle":[{"text":"CBMPeripheralSpec","kind":"identifier"}],"role":"symbol","url":"\/documentation\/corebluetoothmock\/cbmperipheralspec"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCharacteristic":{"url":"\/documentation\/corebluetoothmock\/cbmcharacteristic","abstract":[{"text":"A characteristic of a remote peripheral’s service.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCharacteristic","navigatorTitle":[{"kind":"identifier","text":"CBMCharacteristic"}],"title":"CBMCharacteristic","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMCharacteristic"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerMock":{"abstract":[{"type":"text","text":"Mock implementation of the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManager"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"CBMCentralManagerMock"}],"role":"symbol","title":"CBMCentralManagerMock","kind":"symbol","type":"topic","url":"\/documentation\/corebluetoothmock\/cbmcentralmanagermock","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerMock","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CBMCentralManagerMock","kind":"identifier"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMProximity":{"role":"symbol","type":"topic","url":"\/documentation\/corebluetoothmock\/cbmproximity","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBMProximity"}],"navigatorTitle":[{"text":"CBMProximity","kind":"identifier"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMProximity","abstract":[{"text":"The approximate mock device proximity.","type":"text"}],"title":"CBMProximity","kind":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerOptionRestoreIdentifierKey":{"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBMCentralManagerOptionRestoreIdentifierKey"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerOptionRestoreIdentifierKey","type":"topic","title":"CBMCentralManagerOptionRestoreIdentifierKey","abstract":[{"text":"A string containing a unique identifier (UID) for the central manager to instantiate.","type":"text"}],"url":"\/documentation\/corebluetoothmock\/cbmcentralmanageroptionrestoreidentifierkey","kind":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMPeer":{"type":"topic","role":"symbol","title":"CBMPeer","abstract":[{"type":"text","text":"An object that represents a remote device."}],"url":"\/documentation\/corebluetoothmock\/cbmpeer","kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeer","navigatorTitle":[{"kind":"identifier","text":"CBMPeer"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"CBMPeer","kind":"identifier"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMAdvertisementConfig":{"navigatorTitle":[{"kind":"identifier","text":"CBMAdvertisementConfig"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CBMAdvertisementConfig","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Advertisement configuration."}],"url":"\/documentation\/corebluetoothmock\/cbmadvertisementconfig","title":"CBMAdvertisementConfig","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementConfig","role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerScanOptionAllowDuplicatesKey":{"type":"topic","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"CBMCentralManagerScanOptionAllowDuplicatesKey","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerScanOptionAllowDuplicatesKey","abstract":[{"type":"text","text":"A Boolean value that specifies whether the scan should run without duplicate filtering."}],"title":"CBMCentralManagerScanOptionAllowDuplicatesKey","role":"symbol","url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerscanoptionallowduplicateskey"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMService":{"kind":"symbol","type":"topic","title":"CBMService","url":"\/documentation\/corebluetoothmock\/cbmservice","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMService"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMService","abstract":[{"type":"text","text":"A collection of data and associated behaviors that accomplish a function or feature of a device."}],"navigatorTitle":[{"text":"CBMService","kind":"identifier"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerRestoredStateScanServicesKey":{"type":"topic","url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerrestoredstatescanserviceskey","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBMCentralManagerRestoredStateScanServicesKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"role":"symbol","title":"CBMCentralManagerRestoredStateScanServicesKey","abstract":[{"type":"text","text":"An array of service IDs for use when restoring state."}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerRestoredStateScanServicesKey","kind":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock":{"abstract":[{"type":"text","text":"Test "},{"inlineContent":[{"text":"CoreBluetooth","type":"text"}],"type":"strong"},{"type":"text","text":" features in your app using mocks."}],"title":"CoreBluetoothMock","type":"topic","kind":"symbol","role":"collection","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock","url":"\/documentation\/corebluetoothmock"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMAdvertisementDataOverflowServiceUUIDsKey":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMAdvertisementDataOverflowServiceUUIDsKey"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementDataOverflowServiceUUIDsKey","type":"topic","url":"\/documentation\/corebluetoothmock\/cbmadvertisementdataoverflowserviceuuidskey","title":"CBMAdvertisementDataOverflowServiceUUIDsKey","abstract":[{"text":"An array of UUIDs found in the overflow area of the advertisement data.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMATTError":{"type":"topic","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBMATTError"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMATTError","kind":"symbol","abstract":[{"type":"text","text":"An error that Core Bluetooth returns while using Attribute Protocol (ATT)."}],"url":"\/documentation\/corebluetoothmock\/cbmatterror","navigatorTitle":[{"text":"CBMATTError","kind":"identifier"}],"title":"CBMATTError"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCharacteristicWriteType":{"kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"CBMCharacteristicWriteType","kind":"identifier"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCharacteristicWriteType","navigatorTitle":[{"text":"CBMCharacteristicWriteType","kind":"identifier"}],"abstract":[{"text":"Values representing the possible write types to a characteristic’s value.","type":"text"}],"url":"\/documentation\/corebluetoothmock\/cbmcharacteristicwritetype","title":"CBMCharacteristicWriteType","type":"topic","role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCentralManagerRestoredStateScanOptionsKey":{"kind":"symbol","type":"topic","title":"CBMCentralManagerRestoredStateScanOptionsKey","url":"\/documentation\/corebluetoothmock\/cbmcentralmanagerrestoredstatescanoptionskey","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"CBMCentralManagerRestoredStateScanOptionsKey","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCentralManagerRestoredStateScanOptionsKey","abstract":[{"text":"A dictionary of peripheral scan options for use when restoring state.","type":"text"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMConnectPeripheralOptionStartDelayKey":{"kind":"symbol","url":"\/documentation\/corebluetoothmock\/cbmconnectperipheraloptionstartdelaykey","abstract":[{"type":"text","text":"An option that indicates a delay before the system makes a connection."}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMConnectPeripheralOptionStartDelayKey","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CBMConnectPeripheralOptionStartDelayKey","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"title":"CBMConnectPeripheralOptionStartDelayKey","role":"symbol","type":"topic"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMPeripheralSpecDelegate":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBMPeripheralSpecDelegate"}],"kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralSpecDelegate","abstract":[{"text":"This delegate should implement the behavior of a real Bluetooth LE device during a connection.","type":"text"}],"title":"CBMPeripheralSpecDelegate","navigatorTitle":[{"text":"CBMPeripheralSpecDelegate","kind":"identifier"}],"role":"symbol","url":"\/documentation\/corebluetoothmock\/cbmperipheralspecdelegate"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMConnectPeripheralOptionNotifyOnNotificationKey":{"title":"CBMConnectPeripheralOptionNotifyOnNotificationKey","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBMConnectPeripheralOptionNotifyOnNotificationKey"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"type":"topic","abstract":[{"type":"text","text":"A Boolean value that specifies whether the system should display an alert for any"},{"text":" ","type":"text"},{"text":"notification sent by a peripheral.","type":"text"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMConnectPeripheralOptionNotifyOnNotificationKey","url":"\/documentation\/corebluetoothmock\/cbmconnectperipheraloptionnotifyonnotificationkey","kind":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/Mocking-peripherals":{"role":"article","type":"topic","title":"Mocking Bluetooth LE Devices","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/Mocking-peripherals","url":"\/documentation\/corebluetoothmock\/mocking-peripherals","abstract":[{"type":"text","text":"How to create mock peripherals to be used in tests."}],"kind":"article"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMPeripheral":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMPeripheral"}],"kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheral","abstract":[{"text":"A remote peripheral device.","type":"text"}],"role":"symbol","title":"CBMPeripheral","navigatorTitle":[{"text":"CBMPeripheral","kind":"identifier"}],"url":"\/documentation\/corebluetoothmock\/cbmperipheral","type":"topic"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMManagerAuthorization":{"title":"CBMManagerAuthorization","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMManagerAuthorization","url":"\/documentation\/corebluetoothmock\/cbmmanagerauthorization","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMManagerAuthorization"}],"abstract":[{"text":"The current authorization state of a Core Bluetooth manager.","type":"text"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"CBMManagerAuthorization","kind":"identifier"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMDescriptorMock":{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMDescriptorMock","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"CBMDescriptorMock","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMDescriptorMock"}],"type":"topic","abstract":[{"text":"Mock implementation of ","type":"text"},{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMDescriptor","isActive":true,"type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/corebluetoothmock\/cbmdescriptormock","title":"CBMDescriptorMock"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMPeripheralNative":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"CBMPeripheralNative","kind":"identifier"}],"url":"\/documentation\/corebluetoothmock\/cbmperipheralnative","title":"CBMPeripheralNative","abstract":[{"type":"text","text":"A native implementation of "},{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheral","isActive":true,"type":"reference"},{"text":" that will proxy all requests to an underlying ","type":"text"},{"code":"CBPeripheral","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralNative","navigatorTitle":[{"kind":"identifier","text":"CBMPeripheralNative"}]},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMConnectPeripheralOptionNotifyOnConnectionKey":{"title":"CBMConnectPeripheralOptionNotifyOnConnectionKey","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMConnectPeripheralOptionNotifyOnConnectionKey"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"A Boolean value that specifies whether the system should display an alert when","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"connecting a peripheral in the background."}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMConnectPeripheralOptionNotifyOnConnectionKey","url":"\/documentation\/corebluetoothmock\/cbmconnectperipheraloptionnotifyonconnectionkey","kind":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMAdvertisementDataLocalNameKey":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMAdvertisementDataLocalNameKey"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementDataLocalNameKey","type":"topic","url":"\/documentation\/corebluetoothmock\/cbmadvertisementdatalocalnamekey","title":"CBMAdvertisementDataLocalNameKey","kind":"symbol","abstract":[{"text":"The local name of a peripheral.","type":"text"}],"role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/Simulation":{"role":"article","type":"topic","title":"Simulation","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/Simulation","url":"\/documentation\/corebluetoothmock\/simulation","abstract":[{"type":"text","text":"Set of methods for simulating various Bluetooth LE events."}],"kind":"article"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMConnectPeripheralOptionNotifyOnDisconnectionKey":{"title":"CBMConnectPeripheralOptionNotifyOnDisconnectionKey","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMConnectPeripheralOptionNotifyOnDisconnectionKey"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"A Boolean value that specifies whether the system should display an alert when","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"disconnecting a peripheral in the background."}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMConnectPeripheralOptionNotifyOnDisconnectionKey","url":"\/documentation\/corebluetoothmock\/cbmconnectperipheraloptionnotifyondisconnectionkey","kind":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMCharacteristicProperties":{"abstract":[{"text":"Values that represent the possible properties of a characteristic.","type":"text"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMCharacteristicProperties","navigatorTitle":[{"kind":"identifier","text":"CBMCharacteristicProperties"}],"url":"\/documentation\/corebluetoothmock\/cbmcharacteristicproperties","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CBMCharacteristicProperties"}],"title":"CBMCharacteristicProperties"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMClientCharacteristicConfigurationDescriptorMock":{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMClientCharacteristicConfigurationDescriptorMock","abstract":[{"type":"text","text":"A mock implementation of Client Characteristic Configuration descriptor (CCCD)."}],"navigatorTitle":[{"kind":"identifier","text":"CBMClientCharacteristicConfigurationDescriptorMock"}],"url":"\/documentation\/corebluetoothmock\/cbmclientcharacteristicconfigurationdescriptormock","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"CBMClientCharacteristicConfigurationDescriptorMock","kind":"identifier"}],"title":"CBMClientCharacteristicConfigurationDescriptorMock"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMPeripheralMock":{"navigatorTitle":[{"text":"CBMPeripheralMock","kind":"identifier"}],"abstract":[{"type":"text","text":"Mock implementation of the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheral"},{"type":"text","text":"."}],"title":"CBMPeripheralMock","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralMock","kind":"symbol","url":"\/documentation\/corebluetoothmock\/cbmperipheralmock","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"CBMPeripheralMock","kind":"identifier"}],"type":"topic"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMPeripheralDelegateProxy":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMPeripheralDelegateProxy"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralDelegateProxy","type":"topic","url":"\/documentation\/corebluetoothmock\/cbmperipheraldelegateproxy","title":"CBMPeripheralDelegateProxy","abstract":[{"text":"A helper class that allows setting delegate callbacks as closures.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CBMPeripheralDelegateProxy"}],"role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMAdvertisementDataServiceUUIDsKey":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMAdvertisementDataServiceUUIDsKey"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementDataServiceUUIDsKey","type":"topic","url":"\/documentation\/corebluetoothmock\/cbmadvertisementdataserviceuuidskey","title":"CBMAdvertisementDataServiceUUIDsKey","kind":"symbol","abstract":[{"text":"An array of service UUIDs.","type":"text"}],"role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMManagerState":{"abstract":[{"type":"text","text":"The possible states of a Core Bluetooth manager."}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMManagerState","title":"CBMManagerState","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMManagerState"}],"navigatorTitle":[{"text":"CBMManagerState","kind":"identifier"}],"url":"\/documentation\/corebluetoothmock\/cbmmanagerstate"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBML2CAPPSM":{"type":"topic","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBML2CAPPSM","title":"CBML2CAPPSM","role":"symbol","navigatorTitle":[{"text":"CBML2CAPPSM","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"CBML2CAPPSM","kind":"identifier"}],"abstract":[{"text":"The type of PSM identifiers.","type":"text"}],"url":"\/documentation\/corebluetoothmock\/cbml2cappsm","kind":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMAdvertisementDataServiceDataKey":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMAdvertisementDataServiceDataKey"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementDataServiceDataKey","type":"topic","url":"\/documentation\/corebluetoothmock\/cbmadvertisementdataservicedatakey","title":"CBMAdvertisementDataServiceDataKey","abstract":[{"text":"A dictionary that contains service-specific advertisement data.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMAttribute":{"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAttribute","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMAttribute"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CBMAttribute"}],"url":"\/documentation\/corebluetoothmock\/cbmattribute","kind":"symbol","title":"CBMAttribute","abstract":[{"text":"A representation of common aspects of services offered by a peripheral.","type":"text"}],"type":"topic"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMAdvertisementDataTxPowerLevelKey":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CBMAdvertisementDataTxPowerLevelKey"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMAdvertisementDataTxPowerLevelKey","type":"topic","url":"\/documentation\/corebluetoothmock\/cbmadvertisementdatatxpowerlevelkey","title":"CBMAdvertisementDataTxPowerLevelKey","kind":"symbol","abstract":[{"text":"The transmit power of a peripheral.","type":"text"}],"role":"symbol"},"doc://CoreBluetoothMock/documentation/CoreBluetoothMock/CBMPeripheralState":{"type":"topic","role":"symbol","title":"CBMPeripheralState","abstract":[{"type":"text","text":"Values representing the connection state of a peripheral."}],"url":"\/documentation\/corebluetoothmock\/cbmperipheralstate","kind":"symbol","identifier":"doc:\/\/CoreBluetoothMock\/documentation\/CoreBluetoothMock\/CBMPeripheralState","navigatorTitle":[{"text":"CBMPeripheralState","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"CBMPeripheralState","kind":"identifier"}]}}}